{"version":3,"sources":["component/poke-item/poke-item.component.jsx","component/loader/loader.component.jsx","redux/pokemon/poke.selectors.js","redux/pokemon/poke.type.js","redux/pokemon/poke.action.js","component/poke-list/poke-list.component.jsx","App.js","reportWebVitals.js","redux/pokemon/poke.reducer.js","redux/root.reducer.js","redux/store.js","index.js"],"names":["PokeItem","pokemon","name","sprites","className","src","front_default","alt","Loader","selectPoke","state","pokeData","selectPokeList","createSelector","pokeList","selectPokeLoading","isLoading","selectPokeCount","count","pokeActionTypes","FETCH_POKE_START","FETCH_POKE_SUCCESS","FETCH_POKE_FAILURE","SET_COUNT","setCount","type","payload","fetchPokeAsync","dispatch","fetch","then","res","json","data","a","results","pokeArr","i","length","response","push","console","log","catch","err","mapStateToProps","createStructuredSelector","connect","useEffect","map","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","error","pokeReducer","action","rootReducer","combineReducers","middleware","thunk","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53147d34.chunk.js","sourcesContent":["import './poke-item.styles.css';\r\n\r\nconst PokeItem = ({pokemon}) => {\r\n    const {name, sprites} = pokemon;\r\n    return(\r\n        <div className=\"pokemon-container\">\r\n            <img src={sprites.front_default} alt={name}/>\r\n            <span>{name}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokeItem;\r\n","import './loader.styles.css';\r\n\r\nconst Loader = () =>{\r\n    return(\r\n        <div className=\"loader-container\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Loader;","import {createSelector} from \"reselect\";\r\n\r\nconst selectPoke = state => state.pokeData;\r\n\r\nexport const selectPokeList = createSelector(\r\n    [selectPoke],\r\n    pokeData => pokeData.pokeList\r\n)\r\n\r\nexport const selectPokeLoading = createSelector(\r\n    [selectPoke],\r\n    pokeData => pokeData.isLoading\r\n)\r\n\r\nexport const selectPokeCount = createSelector(\r\n    [selectPoke],\r\n    pokeData => pokeData.count\r\n)","const pokeActionTypes = {\r\n    FETCH_POKE_START: \"FETCH_POKE_START\",\r\n    FETCH_POKE_SUCCESS: \"FETCAH_POKE_SUCCESS\",\r\n    FETCH_POKE_FAILURE: \"FETCH_POKE_FAILIURE\",\r\n    SET_COUNT: \"SET_COUNT\"\r\n}\r\n\r\nexport default pokeActionTypes;","import pokeActionTypes from \"./poke.type\"\r\n\r\nexport const fetchPokeStart = () => ({\r\n    type: pokeActionTypes.FETCH_POKE_START\r\n})\r\n\r\nexport const fetchPokeSuccess = (pokeData) => ({\r\n    type: pokeActionTypes.FETCH_POKE_SUCCESS,\r\n    payload: pokeData\r\n})\r\n\r\nexport const fetchPokeFailure = (errMessage) => ({\r\n    type: pokeActionTypes.FETCH_POKE_FAILURE,\r\n    payload: errMessage\r\n})\r\n\r\nexport const setCount = (count) => ({\r\n    type: pokeActionTypes.SET_COUNT,\r\n    payload: count\r\n})\r\n\r\nexport const fetchPokeAsync = (count) => { \r\n    return dispatch => {\r\n        dispatch(fetchPokeStart());\r\n        fetch(`https://pokeapi.co/api/v2/pokemon/?limit=10&offset=${count}`)\r\n        .then(res => res.json())\r\n        .then(async (data) => {\r\n            const {results} = data;\r\n            let pokeArr = [];\r\n            for(let i=0; i< results.length; i++){\r\n                const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${results[i].name}`)\r\n                const data =  await response.json();\r\n                pokeArr.push(data);\r\n            }\r\n            dispatch(fetchPokeSuccess(pokeArr));\r\n            console.log(typeof count, count)\r\n            dispatch(setCount(count+10));\r\n        })\r\n        .catch(err => dispatch(fetchPokeFailure(err)))\r\n    }\r\n}","import { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport {createStructuredSelector} from 'reselect';\r\n\r\nimport PokeItem from \"../poke-item/poke-item.component\";\r\nimport Loader from \"../loader/loader.component\";\r\n\r\nimport { selectPokeCount, selectPokeList, selectPokeLoading } from \"../../redux/pokemon/poke.selectors\";\r\nimport { fetchPokeAsync } from \"../../redux/pokemon/poke.action\";\r\n\r\nimport './poke-list.styles.css';\r\n\r\nconst PokeList = ({pokeList, fetchPokeAsync, count, isLoading}) => {\r\n    useEffect(() => {\r\n        fetchPokeAsync(0);\r\n    },[fetchPokeAsync])\r\n\r\n\r\n    return(\r\n        <div className=\"pokeListContainer\">\r\n            {\r\n            isLoading? <Loader/>:\r\n             pokeList.map(pokemon => <PokeItem key={pokemon.name} pokemon={pokemon}/>)\r\n            }\r\n            <div className=\"load-more-btn-container\">\r\n                <button className=\"load-more-btn\" onClick={() => fetchPokeAsync(count)}>\r\n                    Load More\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    pokeList: selectPokeList,\r\n    isLoading: selectPokeLoading,\r\n    count: selectPokeCount\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchPokeAsync: (count) => dispatch(fetchPokeAsync(count))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokeList);","import PokeList from './component/poke-list/poke-list.component';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Pokemon List\n      </header>\n      <PokeList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import pokeActionTypes from \"./poke.type\";\r\n\r\nconst INITIAL_STATE = {\r\n    pokeList: [],\r\n    count: 0,\r\n    isLoading: true,\r\n    error: \"\"\r\n}\r\n\r\nconst pokeReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case pokeActionTypes.FETCH_POKE_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case pokeActionTypes.FETCH_POKE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                pokeList: action.payload || []\r\n            }\r\n        case pokeActionTypes.FETCH_POKE_FAILURE:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload\r\n            }\r\n        case pokeActionTypes.SET_COUNT:\r\n            return{\r\n                ...state,\r\n                count: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default pokeReducer;","import { combineReducers } from \"redux\";\r\nimport pokeReducer from \"./pokemon/poke.reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    pokeData: pokeReducer\r\n})\r\n\r\nexport default rootReducer;\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './root.reducer';\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}